version: '3.8'

services:
  api_gateway:
    build: ./api-gateway
    container_name: api_gateway
    ports:
      - "7777:7777"
    depends_on:
      - user_service
      - post_service
    networks:
      - app_network

  user_service:
    build: ./user-service
    container_name: user_service
    environment:
      - PG_HOST=user_postgres
      - PG_PORT=5432
      - PG_USER=postgres
      - PG_PASSWORD=Abdu0811
      - PG_DBNAME=userservice
      - REDIS_HOST=redis
    ports:
      - "8888:8888"
    depends_on:
      - user_postgres
      - redis
    networks:
      - app_network

  post_service:
    build: ./post-service
    container_name: post_service
    environment:
      - PG_HOST=post_postgres
      - PG_PORT=5432
      - PG_USER=postgres
      - PG_PASSWORD=Abdu0811
      - PG_DBNAME=postservice
      - REDIS_HOST=redis
    ports:
      - "9999:9999"
    depends_on:
      - post_postgres
      - redis
    networks:
      - app_network

  user_postgres:
    image: postgres:14-alpine
    container_name: user_postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Abdu0811
      POSTGRES_DB: userservice
      PGDATA: /var/lib/postgresql/data
    volumes:
      - user-db-data:/var/lib/postgresql/data
      - ./user-service/migrations:/docker-entrypoint-initdb.d
    ports:
      - "5435:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d userservice || exit 1"]
      interval: 30s
      retries: 3
      start_period: 30s
      timeout: 10s
    networks:
      - app_network

  post_postgres:
    image: postgres:14-alpine
    container_name: post_postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Abdu0811
      POSTGRES_DB: postservice
      PGDATA: /var/lib/postgresql/data
    volumes:
      - post-db-data:/var/lib/postgresql/data
      - ./post-service/migrations:/docker-entrypoint-initdb.d
    ports:
      - "5436:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postservice || exit 1"]
      interval: 30s
      retries: 3
      start_period: 30s
      timeout: 10s
    networks:
      - app_network

  redis:
    container_name: redis
    image: redis:latest
    ports:
      - "6380:6379"
    networks:
      - app_network

networks:
  app_network:
    driver: bridge

volumes:
  user-db-data:
  post-db-data:
